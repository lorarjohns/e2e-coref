TensorFlow 2.0 Upgrade Script
-----------------------------
Converted 20 files
Detected 16 issues that require attention
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
File: /mnt/coref_model.py
--------------------------------------------------------------------------------
/mnt/coref_model.py:242:27: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
/mnt/coref_model.py:261:38: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
/mnt/coref_model.py:262:24: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
/mnt/coref_model.py:279:26: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
/mnt/coref_model.py:365:33: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
/mnt/coref_model.py:414:35: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
/mnt/coref_model.py:422:42: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: /mnt/util.py
--------------------------------------------------------------------------------
/mnt/util.py:97:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
/mnt/util.py:98:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
/mnt/util.py:105:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
/mnt/util.py:106:16: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
/mnt/util.py:120:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
/mnt/util.py:121:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
/mnt/util.py:217:25: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
/mnt/util.py:218:27: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: /mnt/train.py
--------------------------------------------------------------------------------
/mnt/train.py:52:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
================================================================================
Detailed log follows:

================================================================================
================================================================================
Input tree: '/mnt/'
================================================================================
--------------------------------------------------------------------------------
Processing file '/mnt/continuous_evaluate.py'
 outputting to '/mnt/continuous_evaluate.py'
--------------------------------------------------------------------------------

23:10: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
25:11: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
25:11: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
30:7: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '/mnt/minimize.py'
 outputting to '/mnt/minimize.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '/mnt/ps.py'
 outputting to '/mnt/ps.py'
--------------------------------------------------------------------------------

14:11: INFO: Renamed 'tf.train.Server' to 'tf.distribute.Server'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '/mnt/metrics.py'
 outputting to '/mnt/metrics.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '/mnt/get_char_vocab.py'
 outputting to '/mnt/get_char_vocab.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '/mnt/worker.py'
 outputting to '/mnt/worker.py'
--------------------------------------------------------------------------------

24:11: INFO: Renamed 'tf.train.Server' to 'tf.distribute.Server'
29:17: INFO: Renamed 'tf.train.replica_device_setter' to 'tf.compat.v1.train.replica_device_setter'
31:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
32:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
35:11: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
35:11: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
40:7: INFO: Renamed 'tf.train.Supervisor' to 'tf.compat.v1.train.Supervisor'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '/mnt/coref_model.py'
 outputting to '/mnt/coref_model.py'
--------------------------------------------------------------------------------

52:32: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
54:12: INFO: Renamed 'tf.PaddingFIFOQueue' to 'tf.queue.PaddingFIFOQueue'
60:29: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
61:20: INFO: tf.train.exponential_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

61:20: INFO: Renamed 'tf.train.exponential_decay' to 'tf.compat.v1.train.exponential_decay'
63:23: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
64:16: INFO: Added keywords to args of function 'tf.gradients'
67:15: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
68:14: INFO: Renamed 'tf.train.GradientDescentOptimizer' to 'tf.compat.v1.train.GradientDescentOptimizer'
89:34: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
90:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
93:16: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
197:60: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
202:16: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
210:30: INFO: Renamed 'tf.log' to 'tf.math.log'
210:37: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
227:34: INFO: Renamed 'tf.log' to 'tf.math.log'
227:41: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
235:20: INFO: Added keywords to args of function 'tf.shape'
236:26: INFO: Added keywords to args of function 'tf.shape'
242:27: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
242:27: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
260:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
261:38: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
261:38: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
261:96: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
261:96: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
262:24: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
262:24: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
262:70: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
262:70: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
271:18: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

272:15: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

279:26: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
279:26: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
291:23: INFO: Added keywords to args of function 'tf.boolean_mask'
292:21: INFO: Added keywords to args of function 'tf.boolean_mask'
293:33: INFO: Added keywords to args of function 'tf.boolean_mask'
301:8: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
301:29: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
301:41: INFO: Added keywords to args of function 'tf.shape'
328:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
333:28: INFO: Added keywords to args of function 'tf.reduce_sum'
334:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
341:34: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
341:46: INFO: Renamed 'tf.log' to 'tf.math.log'
341:53: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
345:34: INFO: Added keywords to args of function 'tf.reduce_any'
348:11: INFO: Added keywords to args of function 'tf.reduce_sum'
365:33: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
365:33: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
366:23: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

373:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
377:26: INFO: Renamed 'tf.log' to 'tf.math.log'
379:22: INFO: Added keywords to args of function 'tf.reduce_sum'
386:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
390:38: INFO: Renamed 'tf.log' to 'tf.math.log'
390:45: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
391:31: INFO: Added keywords to args of function 'tf.reduce_logsumexp'
392:15: INFO: Added keywords to args of function 'tf.reduce_logsumexp'
400:19: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
400:40: INFO: Renamed 'tf.log' to 'tf.math.log'
400:47: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
401:19: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
414:35: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
414:35: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
414:106: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
422:42: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
422:42: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
426:18: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

434:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
440:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
441:28: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

442:26: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

446:20: INFO: Added keywords to args of function 'tf.shape'
447:26: INFO: Added keywords to args of function 'tf.shape'
456:11: INFO: Added keywords to args of function 'tf.boolean_mask'
459:20: INFO: Added keywords to args of function 'tf.shape'
464:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
465:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
467:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
469:19: INFO: Renamed 'tf.contrib.rnn.LSTMStateTuple' to 'tf.nn.rnn_cell.LSTMStateTuple'
470:19: INFO: Renamed 'tf.contrib.rnn.LSTMStateTuple' to 'tf.nn.rnn_cell.LSTMStateTuple'
472:38: INFO: Renamed 'tf.nn.bidirectional_dynamic_rnn' to 'tf.compat.v1.nn.bidirectional_dynamic_rnn'
481:23: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '/mnt/util.py'
 outputting to '/mnt/util.py'
--------------------------------------------------------------------------------

39:9: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
39:27: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
72:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
77:12: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

82:37: INFO: Added keywords to args of function 'tf.shape'
97:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
97:21: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
98:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
98:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
99:33: INFO: Renamed 'tf.nn.xw_plus_b' to 'tf.compat.v1.nn.xw_plus_b'
102:24: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

105:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
105:19: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
106:16: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
106:16: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
107:12: INFO: Renamed 'tf.nn.xw_plus_b' to 'tf.compat.v1.nn.xw_plus_b'
119:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
120:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
120:10: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
121:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
121:10: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
122:11: INFO: Added keywords to args of function 'tf.nn.conv1d'
122:11: INFO: Renamed keyword argument for tf.nn.conv1d from value to input
124:13: INFO: Added keywords to args of function 'tf.reduce_max'
211:21: INFO: Renamed 'tf.contrib.rnn.RNNCell' to 'tf.compat.v1.nn.rnn_cell.RNNCell'
215:25: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

217:25: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
217:25: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
218:27: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
218:27: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
219:26: INFO: Renamed 'tf.contrib.rnn.LSTMStateTuple' to 'tf.nn.rnn_cell.LSTMStateTuple'
223:11: INFO: Renamed 'tf.contrib.rnn.LSTMStateTuple' to 'tf.nn.rnn_cell.LSTMStateTuple'
235:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
243:18: INFO: Renamed 'tf.contrib.rnn.LSTMStateTuple' to 'tf.nn.rnn_cell.LSTMStateTuple'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '/mnt/predict.py'
 outputting to '/mnt/predict.py'
--------------------------------------------------------------------------------

23:7: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '/mnt/conll.py'
 outputting to '/mnt/conll.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '/mnt/evaluate.py'
 outputting to '/mnt/evaluate.py'
--------------------------------------------------------------------------------

15:7: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '/mnt/cache_elmo.py'
 outputting to '/mnt/cache_elmo.py'
--------------------------------------------------------------------------------

13:13: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
14:11: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
51:7: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
52:16: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '/mnt/coref_ops.py'
 outputting to '/mnt/coref_ops.py'
--------------------------------------------------------------------------------

11:0: INFO: Renamed 'tf.NotDifferentiable' to 'tf.no_gradient'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '/mnt/demo.py'
 outputting to '/mnt/demo.py'
--------------------------------------------------------------------------------

46:7: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '/mnt/filter_embeddings.py'
 outputting to '/mnt/filter_embeddings.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '/mnt/train.py'
 outputting to '/mnt/train.py'
--------------------------------------------------------------------------------

20:10: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
23:11: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
23:11: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
27:7: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
28:16: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
52:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '/mnt/conll-2012/v3/scripts/conll2name.py'
 outputting to '/mnt/conll-2012/v3/scripts/conll2name.py'
--------------------------------------------------------------------------------

ERROR: Failed to parse.
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/tools/compatibility/ast_edits.py", line 916, in update_string_pasta
    t = pasta.parse(text)
  File "/usr/local/lib/python3.6/dist-packages/pasta/__init__.py", line 23, in parse
    t = ast_utils.parse(src)
  File "/usr/local/lib/python3.6/dist-packages/pasta/base/ast_utils.py", line 56, in parse
    tree = ast.parse(sanitize_source(src))
  File "/usr/lib/python3.6/ast.py", line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  File "<unknown>", line 476
    print '''<DOC DOCNO="%s">''' % (expand_document_id(document_id, o_options.LANGUAGE))
                               ^
SyntaxError: invalid syntax

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '/mnt/conll-2012/v3/scripts/skeleton2conll.py'
 outputting to '/mnt/conll-2012/v3/scripts/skeleton2conll.py'
--------------------------------------------------------------------------------

ERROR: Failed to parse.
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/tools/compatibility/ast_edits.py", line 916, in update_string_pasta
    t = pasta.parse(text)
  File "/usr/local/lib/python3.6/dist-packages/pasta/__init__.py", line 23, in parse
    t = ast_utils.parse(src)
  File "/usr/local/lib/python3.6/dist-packages/pasta/base/ast_utils.py", line 56, in parse
    tree = ast.parse(sanitize_source(src))
  File "/usr/lib/python3.6/ast.py", line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  File "<unknown>", line 392
    except InvalidSexprException, e:
                                ^
SyntaxError: invalid syntax

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '/mnt/conll-2012/v3/scripts/conll2coreference.py'
 outputting to '/mnt/conll-2012/v3/scripts/conll2coreference.py'
--------------------------------------------------------------------------------

ERROR: Failed to parse.
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/tools/compatibility/ast_edits.py", line 916, in update_string_pasta
    t = pasta.parse(text)
  File "/usr/local/lib/python3.6/dist-packages/pasta/__init__.py", line 23, in parse
    t = ast_utils.parse(src)
  File "/usr/local/lib/python3.6/dist-packages/pasta/base/ast_utils.py", line 56, in parse
    tree = ast.parse(sanitize_source(src))
  File "/usr/lib/python3.6/ast.py", line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  File "<unknown>", line 477
    print chain_start_hash
                         ^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(chain_start_hash)?

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '/mnt/conll-2012/v3/scripts/conll2parse.py'
 outputting to '/mnt/conll-2012/v3/scripts/conll2parse.py'
--------------------------------------------------------------------------------

ERROR: Failed to parse.
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/tools/compatibility/ast_edits.py", line 916, in update_string_pasta
    t = pasta.parse(text)
  File "/usr/local/lib/python3.6/dist-packages/pasta/__init__.py", line 23, in parse
    t = ast_utils.parse(src)
  File "/usr/local/lib/python3.6/dist-packages/pasta/base/ast_utils.py", line 56, in parse
    tree = ast.parse(sanitize_source(src))
  File "/usr/lib/python3.6/ast.py", line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  File "<unknown>", line 523
    print a_parsed_sentence
                          ^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(a_parsed_sentence)?

--------------------------------------------------------------------------------

